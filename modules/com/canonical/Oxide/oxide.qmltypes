import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -v -noinstantiate com.canonical.Oxide 1.15 com/canonical/Oxide'

Module {
    dependencies: [
        "QtQuick 2.0",
        "QtTest 1.1",
        "com.canonical.Oxide.Testing 1.0",
        "com.canonical.Oxide.Testing.hack 1.0"
    ]
    Component {
        name: "OxideQCertificateError"
        prototype: "QObject"
        exports: ["CertificateError 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Error"
            values: {
                "OK": 0,
                "ErrorBadIdentity": 1,
                "ErrorExpired": 2,
                "ErrorDateInvalid": 3,
                "ErrorAuthorityInvalid": 4,
                "ErrorRevoked": 5,
                "ErrorInvalid": 6,
                "ErrorInsecure": 7,
                "ErrorGeneric": 8
            }
        }
        Property { name: "url"; type: "QUrl"; isReadonly: true }
        Property { name: "isCancelled"; type: "bool"; isReadonly: true }
        Property { name: "isMainFrame"; type: "bool"; isReadonly: true }
        Property { name: "isSubresource"; type: "bool"; isReadonly: true }
        Property { name: "overridable"; type: "bool"; isReadonly: true }
        Property { name: "strictEnforcement"; type: "bool"; isReadonly: true }
        Property { name: "certificate"; type: "OxideQSslCertificate"; isReadonly: true }
        Property { name: "certError"; type: "Error"; isReadonly: true }
        Signal { name: "cancelled" }
        Method { name: "allow" }
        Method { name: "deny" }
    }
    Component {
        name: "OxideQFindController"
        prototype: "QObject"
        exports: ["FindController 1.8"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "text"; type: "string" }
        Property { name: "caseSensitive"; type: "bool" }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "current"; type: "int"; isReadonly: true }
        Method { name: "next" }
        Method { name: "previous" }
    }
    Component {
        name: "OxideQGeolocationPermissionRequest"
        prototype: "OxideQPermissionRequest"
        exports: ["GeolocationPermissionRequest 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Method { name: "accept" }
    }
    Component {
        name: "OxideQHttpAuthenticationRequest"
        prototype: "QObject"
        exports: ["HttpAuthenticationRequest 1.9"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "host"; type: "string"; isReadonly: true }
        Property { name: "realm"; type: "string"; isReadonly: true }
        Signal { name: "cancelled" }
        Method {
            name: "allow"
            Parameter { name: "username"; type: "string" }
            Parameter { name: "password"; type: "string" }
        }
        Method { name: "deny" }
    }
    Component {
        name: "OxideQLoadEvent"
        exports: ["LoadEvent 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Type"
            values: {
                "TypeStarted": 0,
                "TypeStopped": 1,
                "TypeSucceeded": 2,
                "TypeFailed": 3,
                "TypeCommitted": 4,
                "TypeRedirected": 5
            }
        }
        Enum {
            name: "ErrorDomain"
            values: {
                "ErrorDomainNone": 0,
                "ErrorDomainInternal": 1,
                "ErrorDomainConnection": 2,
                "ErrorDomainCertificate": 3,
                "ErrorDomainHTTP": 4,
                "ErrorDomainCache": 5,
                "ErrorDomainFTP": 6,
                "ErrorDomainDNS": 7
            }
        }
        Property { name: "url"; type: "QUrl"; isReadonly: true }
        Property { name: "type"; type: "Type"; isReadonly: true }
        Property { name: "errorDomain"; type: "ErrorDomain"; isReadonly: true }
        Property { name: "errorString"; type: "string"; isReadonly: true }
        Property { name: "errorCode"; type: "int"; isReadonly: true }
        Property { name: "httpStatusCode"; type: "int"; isReadonly: true }
        Property { name: "originalUrl"; type: "QUrl"; isReadonly: true }
        Property { name: "isError"; type: "bool"; isReadonly: true }
    }
    Component {
        name: "OxideQMediaAccessPermissionRequest"
        prototype: "OxideQPermissionRequest"
        exports: ["MediaAccessPermissionRequest 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "isForAudio"; type: "bool"; isReadonly: true }
        Property { name: "isForVideo"; type: "bool"; isReadonly: true }
    }
    Component {
        name: "OxideQNavigationRequest"
        prototype: "QObject"
        exports: ["NavigationRequest 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Disposition"
            values: {
                "DispositionCurrentTab": 0,
                "DispositionNewForegroundTab": 1,
                "DispositionNewBackgroundTab": 2,
                "DispositionNewPopup": 3,
                "DispositionNewWindow": 4
            }
        }
        Enum {
            name: "Action"
            values: {
                "ActionAccept": 0,
                "ActionReject": 255
            }
        }
        Property { name: "url"; type: "QUrl"; isReadonly: true }
        Property { name: "disposition"; type: "Disposition"; isReadonly: true }
        Property { name: "userGesture"; type: "bool"; isReadonly: true }
        Property { name: "action"; type: "Action" }
    }
    Component {
        name: "OxideQNewViewRequest"
        prototype: "QObject"
        exports: ["NewViewRequest 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Disposition"
            values: {
                "DispositionCurrentTab": 0,
                "DispositionNewForegroundTab": 1,
                "DispositionNewBackgroundTab": 2,
                "DispositionNewPopup": 3,
                "DispositionNewWindow": 4
            }
        }
        Property { name: "position"; type: "QRectF"; isReadonly: true }
        Property { name: "disposition"; type: "Disposition"; isReadonly: true }
    }
    Component {
        name: "OxideQPermissionRequest"
        prototype: "QObject"
        exports: ["PermissionRequest 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "origin"; type: "QUrl"; isReadonly: true }
        Property { name: "embedder"; type: "QUrl"; isReadonly: true }
        Property { name: "isCancelled"; type: "bool"; isReadonly: true }
        Property { name: "url"; type: "QUrl"; isReadonly: true }
        Signal { name: "cancelled" }
        Method { name: "allow" }
        Method { name: "deny" }
    }
    Component {
        name: "OxideQQuickCookieManager"
        prototype: "QObject"
        exports: ["CookieManager 1.0", "CookieManager 1.3"]
        isCreatable: false
        exportMetaObjectRevisions: [0, 1]
        Signal {
            name: "setCookiesResponse"
            Parameter { name: "requestId"; type: "int" }
            Parameter { name: "failedCookies"; type: "QVariant" }
        }
        Signal {
            name: "getCookiesResponse"
            Parameter { name: "requestId"; type: "int" }
            Parameter { name: "cookies"; type: "QVariant" }
        }
        Signal {
            name: "deleteCookiesResponse"
            Parameter { name: "requestId"; type: "int" }
            Parameter { name: "numDeleted"; type: "int" }
        }
        Method {
            name: "setCookies"
            type: "int"
            Parameter { name: "url"; type: "QUrl" }
            Parameter { name: "cookies"; type: "QVariant" }
        }
        Method {
            name: "setNetworkCookies"
            type: "int"
            Parameter { name: "url"; type: "QUrl" }
            Parameter { name: "cookies"; type: "QList<QNetworkCookie>" }
        }
        Method {
            name: "getCookies"
            type: "int"
            Parameter { name: "url"; type: "QUrl" }
        }
        Method { name: "getAllCookies"; type: "int" }
        Method { name: "deleteAllCookies"; revision: 1; type: "int" }
    }
    Component {
        name: "OxideQQuickGlobal"
        prototype: "QObject"
        exports: ["Oxide 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ProcessModel"
            values: {
                "ProcessModelMultiProcess": 0,
                "ProcessModelSingleProcess": 1,
                "ProcessModelProcessPerSiteInstance": 2,
                "ProcessModelProcessPerView": 3,
                "ProcessModelProcessPerSite": 4,
                "ProcessModelSitePerProcess": 5
            }
        }
        Property { name: "processModel"; type: "ProcessModel" }
        Property { name: "maxRendererProcessCount"; type: "int" }
        Property { name: "availableAudioCaptureDevices"; type: "QVariant"; isReadonly: true }
        Property { name: "availableVideoCaptureDevices"; type: "QVariant"; isReadonly: true }
        Property { name: "chromiumVersion"; type: "string"; isReadonly: true }
        Property { name: "version"; type: "string"; isReadonly: true }
        Method { name: "defaultWebContext"; type: "OxideQQuickWebContext*" }
    }
    Component {
        name: "OxideQQuickLocationBarController"
        prototype: "QObject"
        exports: ["LocationBarController 1.4", "LocationBarController 1.7"]
        isCreatable: false
        exportMetaObjectRevisions: [0, 1]
        Enum {
            name: "Mode"
            values: {
                "ModeAuto": 0,
                "ModeShown": 1,
                "ModeHidden": 2
            }
        }
        Property { name: "height"; type: "double" }
        Property { name: "mode"; type: "Mode" }
        Property { name: "animated"; revision: 1; type: "bool" }
        Property { name: "offset"; type: "double"; isReadonly: true }
        Property { name: "contentOffset"; type: "double"; isReadonly: true }
        Signal { name: "animatedChanged"; revision: 1 }
        Method {
            name: "show"
            revision: 1
            Parameter { name: "animate"; type: "bool" }
        }
        Method {
            name: "hide"
            revision: 1
            Parameter { name: "animate"; type: "bool" }
        }
    }
    Component {
        name: "OxideQQuickNavigationHistory"
        prototype: "QAbstractListModel"
        exports: ["NavigationHistory 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "currentIndex"; type: "int" }
    }
    Component {
        name: "OxideQQuickScriptMessage"
        prototype: "QObject"
        exports: ["ScriptMessage 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "frame"; type: "OxideQQuickWebFrame"; isReadonly: true; isPointer: true }
        Property { name: "context"; type: "QUrl"; isReadonly: true }
        Property { name: "id"; type: "string"; isReadonly: true }
        Property { name: "args"; type: "QVariant"; isReadonly: true }
        Property { name: "payload"; type: "QVariant"; isReadonly: true }
        Method {
            name: "reply"
            Parameter { name: "payload"; type: "QVariant" }
        }
        Method {
            name: "error"
            Parameter { name: "payload"; type: "QVariant" }
        }
    }
    Component {
        name: "OxideQQuickScriptMessageHandler"
        prototype: "QObject"
        exports: ["ScriptMessageHandler 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "msgId"; type: "string" }
        Property { name: "contexts"; type: "QList<QUrl>" }
        Property { name: "callback"; type: "QJSValue" }
    }
    Component {
        name: "OxideQQuickScriptMessageRequest"
        prototype: "QObject"
        exports: ["ScriptMessageRequest 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ErrorCode"
            values: {
                "ErrorNone": 0,
                "ErrorInvalidContext": 1,
                "ErrorUncaughtException": 2,
                "ErrorNoHandler": 3,
                "ErrorHandlerReportedError": 4,
                "ErrorHandlerDidNotRespond": 5,
                "ErrorDestinationNotFound": 1
            }
        }
        Property { name: "onreply"; type: "QJSValue" }
        Property { name: "onerror"; type: "QJSValue" }
        Signal { name: "replyCallbackChanged" }
        Signal { name: "errorCallbackChanged" }
    }
    Component {
        name: "OxideQQuickTouchSelectionController"
        prototype: "QObject"
        exports: [
            "TouchSelectionController 1.12",
            "TouchSelectionController 1.15"
        ]
        isCreatable: false
        exportMetaObjectRevisions: [0, 1]
        Enum {
            name: "HandleOrientation"
            values: {
                "HandleOrientationLeft": 0,
                "HandleOrientationCenter": 1,
                "HandleOrientationRight": 2,
                "HandleOrientationUndefined": 3
            }
        }
        Enum {
            name: "Status"
            values: {
                "StatusInactive": 0,
                "StatusInsertionActive": 1,
                "StatusSelectionActive": 2
            }
        }
        Property { name: "active"; type: "bool"; isReadonly: true }
        Property { name: "handle"; type: "QQmlComponent"; isPointer: true }
        Property { name: "bounds"; type: "QRectF"; isReadonly: true }
        Property { name: "handleDragInProgress"; revision: 1; type: "bool"; isReadonly: true }
        Property { name: "status"; revision: 1; type: "Status"; isReadonly: true }
        Signal { name: "handleDragInProgressChanged"; revision: 1 }
        Signal { name: "statusChanged"; revision: 1 }
        Signal { name: "insertionHandleTapped"; revision: 1 }
        Signal { name: "contextMenuIntercepted"; revision: 1 }
        Method { name: "hide"; revision: 1 }
    }
    Component {
        name: "OxideQQuickUserScript"
        prototype: "QObject"
        exports: ["UserScript 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "url"; type: "QUrl" }
        Property { name: "emulateGreasemonkey"; type: "bool" }
        Property { name: "matchAllFrames"; type: "bool" }
        Property { name: "incognitoEnabled"; type: "bool" }
        Property { name: "context"; type: "QUrl" }
        Signal { name: "scriptLoaded" }
        Signal { name: "scriptLoadFailed" }
        Signal { name: "scriptPropertyChanged" }
    }
    Component {
        name: "OxideQQuickWebContext"
        prototype: "QObject"
        exports: [
            "WebContext 1.0",
            "WebContext 1.3",
            "WebContext 1.6",
            "WebContext 1.9"
        ]
        exportMetaObjectRevisions: [0, 1, 2, 3]
        Enum {
            name: "CookiePolicy"
            values: {
                "CookiePolicyAllowAll": 0,
                "CookiePolicyBlockAll": 1,
                "CookiePolicyBlockThirdParty": 2
            }
        }
        Enum {
            name: "SessionCookieMode"
            values: {
                "SessionCookieModeEphemeral": 0,
                "SessionCookieModePersistent": 1,
                "SessionCookieModeRestored": 2
            }
        }
        Property { name: "product"; type: "string" }
        Property { name: "userAgent"; type: "string" }
        Property { name: "dataPath"; type: "QUrl" }
        Property { name: "cachePath"; type: "QUrl" }
        Property { name: "acceptLangs"; type: "string" }
        Property { name: "userScripts"; type: "OxideQQuickUserScript"; isList: true; isReadonly: true }
        Property { name: "cookiePolicy"; type: "CookiePolicy" }
        Property { name: "sessionCookieMode"; type: "SessionCookieMode" }
        Property { name: "popupBlockerEnabled"; type: "bool" }
        Property {
            name: "networkRequestDelegate"
            type: "OxideQQuickWebContextDelegateWorker"
            isPointer: true
        }
        Property {
            name: "storageAccessPermissionDelegate"
            type: "OxideQQuickWebContextDelegateWorker"
            isPointer: true
        }
        Property {
            name: "userAgentOverrideDelegate"
            type: "OxideQQuickWebContextDelegateWorker"
            isPointer: true
        }
        Property { name: "devtoolsEnabled"; type: "bool" }
        Property { name: "devtoolsPort"; type: "int" }
        Property { name: "devtoolsIp"; type: "string" }
        Property {
            name: "cookieManager"
            type: "OxideQQuickCookieManager"
            isReadonly: true
            isPointer: true
        }
        Property { name: "hostMappingRules"; revision: 1; type: "QStringList" }
        Property { name: "allowedExtraUrlSchemes"; revision: 1; type: "QStringList" }
        Property { name: "maxCacheSizeHint"; revision: 2; type: "int" }
        Property { name: "defaultAudioCaptureDeviceId"; revision: 3; type: "string" }
        Property { name: "defaultVideoCaptureDeviceId"; revision: 3; type: "string" }
        Property { name: "userAgentOverrides"; revision: 3; type: "QVariantList" }
        Property { name: "doNotTrackEnabled"; revision: 3; type: "bool" }
        Signal { name: "devtoolsBindIpChanged" }
        Signal { name: "hostMappingRulesChanged"; revision: 1 }
        Signal { name: "allowedExtraUrlSchemesChanged"; revision: 1 }
        Signal { name: "maxCacheSizeHintChanged"; revision: 2 }
        Signal { name: "defaultAudioCaptureDeviceIdChanged"; revision: 3 }
        Signal { name: "defaultVideoCaptureDeviceIdChanged"; revision: 3 }
        Signal { name: "userAgentOverridesChanged"; revision: 3 }
        Signal { name: "doNotTrackEnabledChanged"; revision: 3 }
        Method {
            name: "addUserScript"
            Parameter { name: "user_script"; type: "OxideQQuickUserScript"; isPointer: true }
        }
        Method {
            name: "removeUserScript"
            Parameter { name: "user_script"; type: "OxideQQuickUserScript"; isPointer: true }
        }
    }
    Component {
        name: "OxideQQuickWebContextDelegateWorker"
        prototype: "QObject"
        exports: ["WebContextDelegateWorker 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QUrl" }
        Signal {
            name: "message"
            Parameter { name: "message"; type: "QVariant" }
        }
        Signal {
            name: "error"
            Parameter { name: "error"; type: "string" }
        }
        Method {
            name: "sendMessage"
            Parameter { name: "message"; type: "QVariant" }
        }
    }
    Component {
        name: "OxideQQuickWebFrame"
        prototype: "QObject"
        exports: ["WebFrame 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "url"; type: "QUrl"; isReadonly: true }
        Property { name: "parentFrame"; type: "OxideQQuickWebFrame"; isReadonly: true; isPointer: true }
        Property { name: "childFrames"; type: "OxideQQuickWebFrame"; isList: true; isReadonly: true }
        Property {
            name: "messageHandlers"
            type: "OxideQQuickScriptMessageHandler"
            isList: true
            isReadonly: true
        }
        Method {
            name: "addMessageHandler"
            Parameter { name: "handler"; type: "OxideQQuickScriptMessageHandler"; isPointer: true }
        }
        Method {
            name: "removeMessageHandler"
            Parameter { name: "handler"; type: "OxideQQuickScriptMessageHandler"; isPointer: true }
        }
        Method {
            name: "sendMessage"
            type: "OxideQQuickScriptMessageRequest*"
            Parameter { name: "context"; type: "QUrl" }
            Parameter { name: "msg_id"; type: "string" }
            Parameter { name: "payload"; type: "QVariant" }
        }
        Method {
            name: "sendMessage"
            type: "OxideQQuickScriptMessageRequest*"
            Parameter { name: "context"; type: "QUrl" }
            Parameter { name: "msg_id"; type: "string" }
        }
        Method {
            name: "sendMessageNoReply"
            Parameter { name: "context"; type: "QUrl" }
            Parameter { name: "msg_id"; type: "string" }
            Parameter { name: "payload"; type: "QVariant" }
        }
        Method {
            name: "sendMessageNoReply"
            Parameter { name: "context"; type: "QUrl" }
            Parameter { name: "msg_id"; type: "string" }
        }
    }
    Component {
        name: "OxideQQuickWebView"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: [
            "WebView 1.0",
            "WebView 1.11",
            "WebView 1.12",
            "WebView 1.15",
            "WebView 1.3",
            "WebView 1.4",
            "WebView 1.5",
            "WebView 1.8",
            "WebView 1.9"
        ]
        exportMetaObjectRevisions: [0, 6, 7, 8, 1, 2, 3, 4, 5]
        attachedType: "OxideQQuickWebViewAttached"
        Enum {
            name: "LogMessageSeverityLevel"
            values: {
                "LogSeverityVerbose": -1,
                "LogSeverityInfo": 0,
                "LogSeverityWarning": 1,
                "LogSeverityError": 2,
                "LogSeverityErrorReport": 3,
                "LogSeverityFatal": 4
            }
        }
        Enum {
            name: "ContentType"
            values: {
                "ContentTypeNone": 0,
                "ContentTypeMixedDisplay": 1,
                "ContentTypeMixedScript": 2
            }
        }
        Enum {
            name: "RestoreType"
            values: {
                "RestoreCurrentSession": 0,
                "RestoreLastSessionExitedCleanly": 1,
                "RestoreLastSessionCrashed": 2
            }
        }
        Enum {
            name: "WebProcessStatus"
            values: {
                "WebProcessRunning": 0,
                "WebProcessKilled": 1,
                "WebProcessCrashed": 2
            }
        }
        Enum {
            name: "EditCapabilities"
            values: {
                "NoCapability": 0,
                "UndoCapability": 1,
                "RedoCapability": 2,
                "CutCapability": 4,
                "CopyCapability": 8,
                "PasteCapability": 16,
                "EraseCapability": 32,
                "SelectAllCapability": 64
            }
        }
        Enum {
            name: "MediaType"
            values: {
                "MediaTypeNone": 0,
                "MediaTypeImage": 1,
                "MediaTypeVideo": 2,
                "MediaTypeAudio": 3,
                "MediaTypeCanvas": 4,
                "MediaTypePlugin": 5
            }
        }
        Enum {
            name: "MediaStatus"
            values: {
                "MediaStatusNone": 0,
                "MediaStatusInError": 1,
                "MediaStatusPaused": 2,
                "MediaStatusMuted": 4,
                "MediaStatusLoop": 8,
                "MediaStatusCanSave": 16,
                "MediaStatusHasAudio": 32,
                "MediaStatusCanToggleControls": 64,
                "MediaStatusControls": 128,
                "MediaStatusCanPrint": 256,
                "MediaStatusCanRotate": 512
            }
        }
        Enum {
            name: "EditingCommands"
            values: {
                "EditingCommandUndo": 0,
                "EditingCommandRedo": 1,
                "EditingCommandCut": 2,
                "EditingCommandCopy": 3,
                "EditingCommandPaste": 4,
                "EditingCommandErase": 5,
                "EditingCommandSelectAll": 6
            }
        }
        Property { name: "url"; type: "QUrl" }
        Property { name: "title"; type: "string"; isReadonly: true }
        Property { name: "icon"; type: "QUrl"; isReadonly: true }
        Property { name: "canGoBack"; type: "bool"; isReadonly: true }
        Property { name: "canGoForward"; type: "bool"; isReadonly: true }
        Property { name: "incognito"; type: "bool" }
        Property { name: "loading"; type: "bool"; isReadonly: true }
        Property { name: "fullscreen"; type: "bool" }
        Property { name: "loadProgress"; type: "int"; isReadonly: true }
        Property { name: "rootFrame"; type: "OxideQQuickWebFrame"; isReadonly: true; isPointer: true }
        Property {
            name: "messageHandlers"
            type: "OxideQQuickScriptMessageHandler"
            isList: true
            isReadonly: true
        }
        Property { name: "viewportWidth"; type: "double"; isReadonly: true }
        Property { name: "viewportHeight"; type: "double"; isReadonly: true }
        Property { name: "contentWidth"; type: "double"; isReadonly: true }
        Property { name: "contentHeight"; type: "double"; isReadonly: true }
        Property { name: "contentX"; type: "double"; isReadonly: true }
        Property { name: "contentY"; type: "double"; isReadonly: true }
        Property { name: "contextMenu"; revision: 4; type: "QQmlComponent"; isPointer: true }
        Property { name: "popupMenu"; type: "QQmlComponent"; isPointer: true }
        Property { name: "alertDialog"; type: "QQmlComponent"; isPointer: true }
        Property { name: "confirmDialog"; type: "QQmlComponent"; isPointer: true }
        Property { name: "promptDialog"; type: "QQmlComponent"; isPointer: true }
        Property { name: "beforeUnloadDialog"; type: "QQmlComponent"; isPointer: true }
        Property { name: "filePicker"; type: "QQmlComponent"; isPointer: true }
        Property { name: "context"; type: "OxideQQuickWebContext"; isPointer: true }
        Property { name: "preferences"; type: "OxideQWebPreferences"; isPointer: true }
        Property {
            name: "navigationHistory"
            type: "OxideQQuickNavigationHistory"
            isReadonly: true
            isPointer: true
        }
        Property {
            name: "securityStatus"
            type: "OxideQSecurityStatus"
            isReadonly: true
            isPointer: true
        }
        Property { name: "blockedContent"; type: "ContentType"; isReadonly: true }
        Property { name: "request"; type: "OxideQNewViewRequest"; isPointer: true }
        Property {
            name: "findController"
            revision: 4
            type: "OxideQFindController"
            isReadonly: true
            isPointer: true
        }
        Property { name: "restoreState"; revision: 2; type: "string" }
        Property { name: "restoreType"; revision: 2; type: "RestoreType" }
        Property { name: "currentState"; revision: 2; type: "string"; isReadonly: true }
        Property {
            name: "locationBarController"
            revision: 3
            type: "OxideQQuickLocationBarController"
            isReadonly: true
            isPointer: true
        }
        Property { name: "webProcessStatus"; revision: 4; type: "WebProcessStatus"; isReadonly: true }
        Property { name: "hoveredUrl"; revision: 7; type: "QUrl"; isReadonly: true }
        Property {
            name: "touchSelectionController"
            revision: 7
            type: "OxideQQuickTouchSelectionController"
            isReadonly: true
            isPointer: true
        }
        Property { name: "editingCapabilities"; revision: 7; type: "EditCapabilities"; isReadonly: true }
        Property { name: "zoomFactor"; revision: 8; type: "double" }
        Property { name: "minimumZoomFactor"; revision: 8; type: "double"; isReadonly: true }
        Property { name: "maximumZoomFactor"; revision: 8; type: "double"; isReadonly: true }
        Signal { name: "loadingStateChanged"; revision: 1 }
        Signal {
            name: "loadEvent"
            revision: 1
            Parameter { name: "event"; type: "OxideQLoadEvent" }
        }
        Signal {
            name: "frameAdded"
            Parameter { name: "frame"; type: "OxideQQuickWebFrame"; isPointer: true }
        }
        Signal {
            name: "frameRemoved"
            Parameter { name: "frame"; type: "OxideQQuickWebFrame"; isPointer: true }
        }
        Signal { name: "contextMenuChanged"; revision: 4 }
        Signal {
            name: "fullscreenRequested"
            Parameter { name: "fullscreen"; type: "bool" }
        }
        Signal {
            name: "navigationRequested"
            Parameter { name: "request"; type: "OxideQNavigationRequest"; isPointer: true }
        }
        Signal {
            name: "newViewRequested"
            Parameter { name: "request"; type: "OxideQNewViewRequest"; isPointer: true }
        }
        Signal {
            name: "geolocationPermissionRequested"
            Parameter { name: "request"; type: "QJSValue" }
        }
        Signal {
            name: "mediaAccessPermissionRequested"
            revision: 4
            Parameter { name: "request"; type: "QJSValue" }
        }
        Signal {
            name: "notificationPermissionRequested"
            revision: 6
            Parameter { name: "request"; type: "QJSValue" }
        }
        Signal {
            name: "javaScriptConsoleMessage"
            Parameter { name: "level"; type: "LogMessageSeverityLevel" }
            Parameter { name: "message"; type: "string" }
            Parameter { name: "lineNumber"; type: "int" }
            Parameter { name: "sourceId"; type: "string" }
        }
        Signal {
            name: "downloadRequested"
            Parameter { name: "request"; type: "OxideQDownloadRequest" }
        }
        Signal {
            name: "certificateError"
            Parameter { name: "error"; type: "QJSValue" }
        }
        Signal {
            name: "prepareToCloseResponse"
            revision: 2
            Parameter { name: "proceed"; type: "bool" }
        }
        Signal { name: "closeRequested"; revision: 2 }
        Signal { name: "webProcessStatusChanged"; revision: 4 }
        Signal {
            name: "httpAuthenticationRequested"
            revision: 5
            Parameter { name: "request"; type: "QJSValue" }
        }
        Signal { name: "hoveredUrlChanged"; revision: 7 }
        Signal { name: "editingCapabilitiesChanged"; revision: 7 }
        Signal { name: "zoomFactorChanged"; revision: 8 }
        Signal {
            name: "loadingChanged"
            Parameter { name: "loadEvent"; type: "OxideQLoadEvent" }
        }
        Method { name: "goBack" }
        Method { name: "goForward" }
        Method { name: "stop" }
        Method { name: "reload" }
        Method {
            name: "loadHtml"
            Parameter { name: "html"; type: "string" }
            Parameter { name: "baseUrl"; type: "QUrl" }
        }
        Method {
            name: "loadHtml"
            Parameter { name: "html"; type: "string" }
        }
        Method {
            name: "setCanTemporarilyDisplayInsecureContent"
            Parameter { name: "allow"; type: "bool" }
        }
        Method {
            name: "setCanTemporarilyRunInsecureContent"
            Parameter { name: "allow"; type: "bool" }
        }
        Method { name: "prepareToClose"; revision: 2 }
        Method {
            name: "addMessageHandler"
            Parameter { name: "handler"; type: "OxideQQuickScriptMessageHandler"; isPointer: true }
        }
        Method {
            name: "removeMessageHandler"
            Parameter { name: "handler"; type: "OxideQQuickScriptMessageHandler"; isPointer: true }
        }
        Method {
            name: "executeEditingCommand"
            revision: 4
            Parameter { name: "command"; type: "EditingCommands" }
        }
    }
    Component {
        name: "OxideQQuickWebViewAttached"
        prototype: "QObject"
        Property { name: "view"; type: "OxideQQuickWebView"; isReadonly: true; isPointer: true }
    }
    Component {
        name: "OxideQSecurityStatus"
        prototype: "QObject"
        exports: ["SecurityStatus 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "SecurityLevel"
            values: {
                "SecurityLevelNone": 0,
                "SecurityLevelSecure": 1,
                "SecurityLevelSecureEV": 2,
                "SecurityLevelWarning": 3,
                "SecurityLevelError": 4
            }
        }
        Enum {
            name: "ContentStatus"
            values: {
                "ContentStatusNormal": 0,
                "ContentStatusDisplayedInsecure": 1,
                "ContentStatusRanInsecure": 2
            }
        }
        Enum {
            name: "CertStatus"
            values: {
                "CertStatusOk": 0,
                "CertStatusBadIdentity": 1,
                "CertStatusExpired": 2,
                "CertStatusDateInvalid": 4,
                "CertStatusAuthorityInvalid": 8,
                "CertStatusRevocationCheckFailed": 16,
                "CertStatusRevoked": 32,
                "CertStatusInvalid": 64,
                "CertStatusInsecure": 128,
                "CertStatusGenericError": 256
            }
        }
        Property { name: "securityLevel"; type: "SecurityLevel"; isReadonly: true }
        Property { name: "contentStatus"; type: "ContentStatus"; isReadonly: true }
        Property { name: "certStatus"; type: "CertStatus"; isReadonly: true }
        Property { name: "certificate"; type: "QVariant"; isReadonly: true }
    }
    Component {
        name: "OxideQSslCertificate"
        exports: ["SslCertificate 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "PrincipalAttr"
            values: {
                "PrincipalAttrOrganizationName": 0,
                "PrincipalAttrCommonName": 1,
                "PrincipalAttrLocalityName": 2,
                "PrincipalAttrOrganizationUnitName": 3,
                "PrincipalAttrCountryName": 4,
                "PrincipalAttrStateOrProvinceName": 5
            }
        }
        Property { name: "serialNumber"; type: "string"; isReadonly: true }
        Property { name: "subjectDisplayName"; type: "string"; isReadonly: true }
        Property { name: "issuerDisplayName"; type: "string"; isReadonly: true }
        Property { name: "effectiveDate"; type: "QDateTime"; isReadonly: true }
        Property { name: "expiryDate"; type: "QDateTime"; isReadonly: true }
        Property { name: "fingerprintSHA1"; type: "string"; isReadonly: true }
        Property { name: "isExpired"; type: "bool"; isReadonly: true }
        Property { name: "issuer"; type: "QVariant"; isReadonly: true }
        Method {
            name: "getSubjectInfo"
            type: "QStringList"
            Parameter { name: "attr"; type: "PrincipalAttr" }
        }
        Method {
            name: "getIssuerInfo"
            type: "QStringList"
            Parameter { name: "attr"; type: "PrincipalAttr" }
        }
        Method { name: "copy"; type: "OxideQSslCertificate" }
        Method { name: "toPem"; type: "string" }
    }
    Component {
        name: "OxideQWebPreferences"
        prototype: "QObject"
        exports: ["WebPreferences 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "standardFontFamily"; type: "string" }
        Property { name: "fixedFontFamily"; type: "string" }
        Property { name: "serifFontFamily"; type: "string" }
        Property { name: "sanSerifFontFamily"; type: "string" }
        Property { name: "remoteFontsEnabled"; type: "bool" }
        Property { name: "defaultEncoding"; type: "string" }
        Property { name: "defaultFontSize"; type: "uint" }
        Property { name: "defaultFixedFontSize"; type: "uint" }
        Property { name: "minimumFontSize"; type: "uint" }
        Property { name: "javascriptEnabled"; type: "bool" }
        Property { name: "allowScriptsToCloseWindows"; type: "bool" }
        Property { name: "javascriptCanAccessClipboard"; type: "bool" }
        Property { name: "hyperlinkAuditingEnabled"; type: "bool" }
        Property { name: "allowUniversalAccessFromFileUrls"; type: "bool" }
        Property { name: "allowFileAccessFromFileUrls"; type: "bool" }
        Property { name: "canDisplayInsecureContent"; type: "bool" }
        Property { name: "canRunInsecureContent"; type: "bool" }
        Property { name: "passwordEchoEnabled"; type: "bool" }
        Property { name: "loadsImagesAutomatically"; type: "bool" }
        Property { name: "shrinksStandaloneImagesToFit"; type: "bool" }
        Property { name: "textAreasAreResizable"; type: "bool" }
        Property { name: "localStorageEnabled"; type: "bool" }
        Property { name: "databasesEnabled"; type: "bool" }
        Property { name: "appCacheEnabled"; type: "bool" }
        Property { name: "tabsToLinks"; type: "bool" }
        Property { name: "caretBrowsingEnabled"; type: "bool" }
        Property { name: "touchEnabled"; type: "bool" }
        Signal { name: "sansSerifFontFamilyChanged" }
    }
}
